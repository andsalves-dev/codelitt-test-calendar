{"version":3,"sources":["components/Month.module.scss","components/ReminderModal/ReminderModal.module.scss","reducers/remindersSlice.js","store.js","components/Cell.js","components/Month.js","components/ReminderModal/utils.js","components/ReminderModal/index.js","components/Calendar.js","App.js","reportWebVitals.js","index.js","components/Cell.module.scss","components/Calendar.module.scss"],"names":["module","exports","setInStorage","list","localStorage","setItem","JSON","stringify","remindersSlice","createSlice","name","initialState","itemsStr","getItem","parse","getFromStorage","showModal","reducers","add","state","payload","id","reduce","rem","push","remove","filter","edit","map","actions","configureStore","reducer","reminders","remindersReducer","EmptyCell","className","styles","emptyCell","Cell","dayMoment","setModalReminder","onClick","selected","cellContent","onDoubleClick","datetime","format","role","day","isSame","moment","isToday","date","length","reminder","data-testid","style","backgroundColor","color","title","Month","baseDate","onDateSelect","momentDate","day1Date","startOf","lastDay","daysInMonth","day1Weekday","weekday","useSelector","tbodyRows","row","Array","from","_","k","clone","cellReminders","sort","rem1","rem2","isBefore","container","table","colors","ReminderModal","onHide","titleRef","useRef","dispatch","useDispatch","useState","momentNow","time","mapReminderToFormData","data","setData","errors","setErrors","hasErrors","useMemo","Object","keys","useEffect","current","focus","isValid","match","general","getFormDataErrors","saveReminder","useCallback","actionFn","mapFormDataToReminder","removeReminder","window","confirm","onInputChange","event","currentTarget","value","_data","overlay","modal","heading","inputGroup","inputHolder","onChange","maxLength","ref","type","red","colorsRadioGroup","colorRadioAux","active","checked","button","disabled","Calendar","today","undefined","modalReminder","baseMoment","setBaseDate","calendar","todayButton","monthControls","_baseDate","subtract","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c3c1fc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Month_container__ErIqO\",\"table\":\"Month_table__136EU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ReminderModal_overlay__3Uhc7\",\"heading\":\"ReminderModal_heading__kuBpl\",\"modal\":\"ReminderModal_modal__2hGpT\",\"inputGroup\":\"ReminderModal_inputGroup__2Zuzb\",\"inputHolder\":\"ReminderModal_inputHolder__1jwAf\",\"red\":\"ReminderModal_red__1zouw\",\"button\":\"ReminderModal_button__19YQh\",\"colorsRadioGroup\":\"ReminderModal_colorsRadioGroup__3F1zD\",\"colorRadioAux\":\"ReminderModal_colorRadioAux__1CGUY\",\"active\":\"ReminderModal_active__23zYW\"};","import { createSlice } from '@reduxjs/toolkit'\n\nconst getFromStorage = () => {\n  try {\n    const itemsStr = localStorage.getItem('remindersList')\n    return JSON.parse(itemsStr) || []\n  } catch {\n  }\n\n  return []\n}\nconst setInStorage = list => {\n  localStorage.setItem('remindersList', JSON.stringify(list))\n}\n\nconst remindersSlice = createSlice({\n  name: 'reminders',\n  initialState: {\n    list: getFromStorage(),\n    showModal: false,\n  },\n  reducers: {\n    add: (state, { payload }) => {\n      const id = state.list.reduce((id, rem) => rem.id > id ? rem.id : id, 0) + 1\n      state.list.push({ id, ...payload })\n      setInStorage(state.list)\n    },\n    remove: (state, { payload }) => {\n      state.list = state.list.filter(rem => rem.id !== payload.id)\n      setInStorage(state.list)\n    },\n    edit: (state, { payload }) => {\n      state.list = state.list.map(rem => {\n        if (rem.id === payload.id) {\n          return { ...rem, ...payload }\n        }\n        return rem\n      })\n      setInStorage(state.list)\n    },\n  },\n})\n\nexport const { add, remove, edit } = remindersSlice.actions\n\nexport default remindersSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport remindersReducer from './reducers/remindersSlice'\n\nexport default configureStore({\n  reducer: {\n    reminders: remindersReducer\n  },\n})\n","import React from 'react'\nimport moment from 'moment'\nimport styles from './Cell.module.scss'\n\nexport const EmptyCell = () => <td className={styles.emptyCell}>&nbsp;</td>\n\nexport default function Cell({ dayMoment, reminders, setModalReminder, onClick, selected }) {\n  return (\n    <td>\n      <div\n        className={`${styles.cellContent} ${selected ? styles.selected : ''}`}\n        onClick={onClick}\n        onDoubleClick={() => setModalReminder({ datetime: dayMoment.format('YYYY-MM-DD 12:00:00') })}\n        role=\"button\"\n      >\n      <span className={`${styles.day} ${dayMoment.isSame(moment(), 'day') ? styles.isToday : ''}`}>\n        {dayMoment.date()}\n      </span>\n        {reminders.length > 0 && (\n          <ul className={styles.reminders}>\n            {reminders.map(rem => (\n              <li\n                className={styles.reminder}\n                data-testid=\"reminder\"\n                key={rem.id}\n                onClick={() => setModalReminder(rem)}\n                role=\"button\"\n                style={{ backgroundColor: rem.color }}\n              >\n                {moment(rem.datetime).format('HH:mm')} {rem.title}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </td>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport moment from 'moment'\nimport Cell, { EmptyCell } from './Cell'\nimport styles from './Month.module.scss'\n\nexport default function Month({ baseDate, setModalReminder, onDateSelect }) {\n  const momentDate = moment(baseDate)\n  const day1Date = momentDate.startOf('month')\n  const lastDay = momentDate.daysInMonth()\n  const day1Weekday = day1Date.weekday()\n  const reminders = useSelector(({ reminders }) => reminders.list.filter(rem => {\n    return momentDate.isSame(rem.datetime, 'month')\n  }))\n  const tbodyRows = []\n\n  for (let row = 0; lastDay > (row * 7 - day1Weekday); row++) {\n    tbodyRows.push(\n      <tr key={row + 1}>\n        {Array.from(Array(7)).map((_, k) => {\n          const day = row * 7 - day1Weekday + k + 1\n\n          if (day > lastDay || day < 1) {\n            return <EmptyCell key={day} />\n          }\n\n          const dayMoment = momentDate.date(day).clone()\n          const cellReminders = reminders\n            .filter(rem => dayMoment.isSame(rem.datetime, 'day'))\n            .sort((rem1, rem2) => moment(rem1.datetime).isBefore(rem2.datetime) ? -1 : 1)\n\n          return (\n            <Cell\n              dayMoment={dayMoment}\n              key={day}\n              onClick={() => onDateSelect(dayMoment)}\n              reminders={cellReminders}\n              selected={dayMoment.isSame(baseDate, 'day')}\n              setModalReminder={setModalReminder}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  return (\n    <div className={styles.container}>\n      <table className={styles.table}>\n        <thead>\n        <tr>\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(weekday => (\n            <th key={weekday}>{weekday}</th>\n          ))}\n        </tr>\n        </thead>\n        <tbody>\n        {tbodyRows}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import moment from \"moment\";\n\nexport const colors = ['#42E', '#F12', '#019899', '#AA0', '#000']\n\nexport const mapFormDataToReminder = data => ({\n  ...data,\n  title: data.title,\n  datetime: `${moment(data.date).format('YYYY-MM-DD')}T${data.time}`,\n  color: data.color,\n})\n\nexport const mapReminderToFormData = reminder => {\n  const momentDate = reminder.datetime ? moment(reminder.datetime) : null\n  const momentNow = moment()\n  return {\n    ...reminder,\n    title: reminder.title || '',\n    color: reminder.color || colors[0],\n    date: momentDate ? momentDate.format('YYYY-MM-DD') : momentNow.format('YYYY-MM-DD'),\n    time: momentDate ? momentDate.format('HH:mm') : momentNow.add(1, 'hour').format('HH:00'),\n  }\n}\n\nexport const getFormDataErrors = data => {\n  if (!data.title || !data.date || !data.time || !data.color) {\n    return { general: 'All the fields are required' }\n  }\n\n  if (!moment(data.date, ['MMM D, YYYY', 'YYYY-MM-DD'], true).isValid()) {\n    return {\n      date: 'Invalid date format. Accepted formats: \"YYYY-MM-DD\" or \"MMM DD, YYYY\", examples: \"2022-10-11\", \"Jan 3, 2022\"'\n    }\n  }\n\n  if (!data.time.match(/^([01]?[0-9]|2[0-3]):([0-5][0-9])$/)) {\n    return {\n      time: 'Invalid time format. Accepted format: \"HH:mm\", example: \"15:00\"'\n    }\n  }\n\n  return {}\n}\n","import React, { useCallback, useEffect, useMemo, useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { add, edit, remove } from '../../reducers/remindersSlice'\nimport { colors, mapReminderToFormData, mapFormDataToReminder, getFormDataErrors } from './utils'\nimport styles from './ReminderModal.module.scss'\n\nexport default function ReminderModal({ onHide, reminder = {} }) {\n  const titleRef = useRef()\n  const dispatch = useDispatch()\n  const [data, setData] = useState(mapReminderToFormData(reminder))\n  const [errors, setErrors] = useState({})\n  const hasErrors = useMemo(() => Object.keys(errors).length > 0, [errors])\n  useEffect(() => {\n    titleRef.current && titleRef.current.focus()\n  }, [])\n  useEffect(() => {\n    setErrors(getFormDataErrors(data))\n  }, [data])\n\n  const saveReminder = useCallback(() => {\n    if (hasErrors) return\n    const actionFn = data.id ? edit : add\n    dispatch(actionFn(mapFormDataToReminder(data)))\n    onHide()\n  }, [dispatch, data, onHide, hasErrors])\n  const removeReminder = useCallback(() => {\n    if (window.confirm('Are you sure? ')) {\n      dispatch(remove(reminder))\n      onHide()\n    }\n  }, [dispatch, reminder, onHide])\n  const onInputChange = useCallback(event => {\n    const { name, value } = event.currentTarget\n    setData(_data => ({\n      ..._data,\n      [name]: value,\n    }))\n  }, [])\n\n  return (\n    <>\n      <div className={styles.overlay} />\n      <div className={styles.modal}>\n        <h3 className={styles.heading}>{reminder.id ? 'Edit' : 'Add'} reminder</h3>\n        <div className={styles.inputGroup}>\n          <label>\n            <span>Title:</span>\n            <div className={styles.inputHolder}>\n              <input name=\"title\" onChange={onInputChange} maxLength={30} value={data.title} ref={titleRef} type=\"text\" />\n              <small className={data.title.length >= 30 ? styles.red : ''}>max 30 chars</small>\n            </div>\n          </label>\n          <label>\n            <span>Date:</span>\n            <div className={styles.inputHolder}>\n              <input name=\"date\" onChange={onInputChange} value={data.date} type=\"text\" />\n              <small className={styles.red}>{errors['date']}</small>\n            </div>\n          </label>\n          <label>\n            <span>Time:</span>\n            <div className={styles.inputHolder}>\n              <input name=\"time\" onChange={onInputChange} value={data.time} maxLength={5} type=\"text\" />\n              <small className={styles.red}>{errors['time']}</small>\n            </div>\n          </label>\n          <div>\n            <span>Color:</span>\n            <div className={styles.colorsRadioGroup}>\n              {colors.map(color => (\n                <label\n                  key={color}\n                  className={`${styles.colorRadioAux} ${color === data.color ? styles.active : ''}`}\n                  style={{ backgroundColor: color }}\n                >\n                  <input\n                    id={color}\n                    checked={color === data.color}\n                    name=\"color\"\n                    onChange={onInputChange}\n                    type=\"radio\"\n                    value={color}\n                  />\n                </label>\n              ))}\n            </div>\n          </div>\n          <div>\n            <button onClick={saveReminder} className={styles.button} disabled={hasErrors}>\n              Save\n            </button>\n            {reminder.id ? (\n              <button onClick={removeReminder} className={`${styles.button} ${styles.red}`}>\n                Remove reminder\n              </button>\n            ) : null}\n            <button onClick={onHide} className={styles.button}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\nimport Month from './Month'\nimport styles from './Calendar.module.scss'\nimport ReminderModal from './ReminderModal'\n\nexport default function Calendar() {\n  const today = moment()\n  const [modalReminder, setModalReminder] = useState(undefined)\n  const [baseMoment, setBaseDate] = useState(today.clone())\n  const goToPreviousMonth = () => setBaseDate(_baseDate => _baseDate.clone().subtract(1, 'month'))\n  const goToNextMonth = () => setBaseDate(_baseDate => _baseDate.clone().add(1, 'month'))\n  const goToCurrentMonth = () => setBaseDate(today.clone())\n  const onDateSelect = date => setBaseDate(moment(date).clone())\n\n  return (\n    <div className={styles.calendar}>\n      <button onClick={() => setModalReminder({ datetime: baseMoment.format('YYYY-MM-DD 12:00:00') })}>\n        Add reminder\n      </button>\n      <div className={styles.heading}>\n        <h2>{baseMoment.format('MMMM YYYY')}</h2>\n        {!today.isSame(baseMoment, 'month') ? (\n          <button className={styles.todayButton} onClick={goToCurrentMonth}>\n            Today\n          </button>\n        ) : null}\n        <div className={styles.monthControls}>\n          <button title=\"Previous month\" onClick={goToPreviousMonth}>\n            <span>&lsaquo;</span>\n          </button>\n          <button title=\"Next month\" onClick={goToNextMonth}>\n            <span>&rsaquo;</span>\n          </button>\n        </div>\n      </div>\n      <Month\n        baseDate={baseMoment}\n        onDateSelect={onDateSelect}\n        setModalReminder={setModalReminder}\n      />\n      {modalReminder && (\n        <ReminderModal\n          onHide={() => setModalReminder(undefined)}\n          reminder={modalReminder}\n        />\n      )}\n    </div>\n  )\n}\n","import './App.css';\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\nimport Calendar from './components/Calendar'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Calendar />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellContent\":\"Cell_cellContent__F8Oq1\",\"selected\":\"Cell_selected__3meDO\",\"day\":\"Cell_day__IWxfb\",\"isToday\":\"Cell_isToday__3GWUT\",\"reminders\":\"Cell_reminders__1sXTn\",\"reminder\":\"Cell_reminder__aHhFF\",\"emptyCell\":\"Cell_emptyCell__2eO3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__3jvP9\",\"heading\":\"Calendar_heading__27Oha\",\"todayButton\":\"Calendar_todayButton__5gwOt\",\"monthControls\":\"Calendar_monthControls__2XW7t\"};"],"sourceRoot":""}